{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","setMovies","_useState","useState","_useState2","_slicedToArray","movieFromServer","setMovieFromServer","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","_useState7","_useState8","query","setQuery","_Fragment","htmlFor","type","id","placeholder","cn","value","onChange","event","target","onClick","preventDefault","fetch","concat","then","res","json","catch","Response","Error","getMovie","response","Title","Plot","Poster","imdbID","finally","disabled","currentMovies","find","_toConsumableArray","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9248da7f.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import cn from 'classnames';\nimport React, { useState } from 'react';\n\nimport { getMovie } from '../../api';\nimport { ResponseError } from '../../types/ReponseError';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\nimport { Movie } from '../../types/Movie';\n\n// eslint-disable-next-line max-len\nconst DEFAULT_PICTURE\n  = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\ninterface Props {\n  setMovies: (value: Movie[] | ((prevVar: Movie[]) => Movie[])) => void;\n}\n\nexport const FindMovie: React.FC<Props> = ({ setMovies }) => {\n  const [movieFromServer, setMovieFromServer] = useState<Movie | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<ResponseError | null>(null);\n  const [query, setQuery] = useState('');\n\n  const handleFindMovieButton = (\n    event: React.MouseEvent<HTMLButtonElement>,\n  ) => {\n    event.preventDefault();\n\n    setIsLoading(true);\n    getMovie(query)\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      .then((response: any) => {\n        if (response.Response === 'False') {\n          setError(response);\n\n          return;\n        }\n\n        setMovieFromServer({\n          title: response.Title,\n          description: response.Plot,\n          imgUrl: response.Poster === 'N/A' ? DEFAULT_PICTURE : response.Poster,\n          imdbId: response.imdbID,\n          imdbUrl: `https://www.imdb.com/title/${response.imdbID}`,\n        });\n      })\n      .finally(() => setIsLoading(false));\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setError(null);\n  };\n\n  const handleAddMovieToList = () => {\n    if (movieFromServer) {\n      setMovies((currentMovies: Movie[]) => {\n        if (\n          currentMovies.find((movie) => movie.imdbId === movieFromServer.imdbId)\n        ) {\n          return currentMovies;\n        }\n\n        return [...currentMovies, movieFromServer];\n      });\n\n      setMovieFromServer(null);\n      setQuery('');\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cn('input', { 'is-danger': error })}\n              value={query}\n              onChange={handleInputChange}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn('button is-light', { 'is-loading': isLoading })}\n              onClick={handleFindMovieButton}\n              disabled={query === ''}\n            >\n              Find a movie\n            </button>\n          </div>\n          {movieFromServer && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddMovieToList}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movieFromServer && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n\n          <MovieCard movie={movieFromServer} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=a4e8c1e5';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie setMovies={setMovies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}